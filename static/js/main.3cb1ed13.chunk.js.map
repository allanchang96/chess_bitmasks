{"version":3,"sources":["index.js"],"names":["stringAdd","a","b","i","length","j","carry","res","sum","stringSubtract","sub","removeZeros","substring","values","push","Square","props","color","row","Math","floor","value","click","className","onClick","style","backgroundColor","Label","border","zIndex","Display","this","toString","toUpperCase","input","name","type","width","number","onChange","e","change","computeBinary","computeHex","computeSum","React","Component","Board","state","Array","fill","setState","c","val","parseInt","event","arr","target","negative","validate","counter","isHex","bin","convertHex","newClick","slice","buffer","component","renderSquare","renderLabel","alphaLabel","String","fromCharCode","charCodeAt","handleChangeBin","handleChangeHex","handleChange","clear","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3cb1ed13.chunk.js","sourcesContent":["/* Creates an interactive webpage where clicking on chess bitboard\n * generates the twos complement equivalent for the bitboard\n * https://github.com/SFU-Open-Source-Development/chess-engine\n * Useful to quickly generate bitmasks visually\n *\n * Author: Allan Chang\n *\n * Original code: \n * Source: https://reactjs.org/tutorial/tutorial.html\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\nfunction stringAdd(a, b){\n  let i = a.length - 1;\n  let j = b.length - 1;\n  let carry = 0;\n  let res = \"\";\n  while(i >= 0 || j >= 0 || carry){\n    let sum = 0;\n    if(i >= 0){\n      sum += a[i] - '0';\n    }\n    if(j >= 0){\n      sum += b[j] - '0';\n    }\n    sum += carry;\n    if(sum >= 10){\n      carry = 1;\n      sum -= 10;\n    }\n    else{\n      carry = 0;\n    }\n    i--;\n    j--;\n    res = sum + res;\n  }\n  return res;\n}\n\nfunction stringSubtract(a, b){\n  let i = a.length - 1;\n  let j = b.length - 1;\n  let carry = 0;\n  let res = \"\";\n  while(i >= 0){\n    let sub = carry + (a[i] - '0');\n    carry = 0;\n    if(j >= 0){\n      sub -= b[j] - '0';\n    }\n    if(sub < 0){\n      sub += 10;\n      carry = -1;\n    }\n    i--;\n    j--;\n    res = sub + res;\n  }\n  let removeZeros = 0;\n  while(res[removeZeros] === \"0\"){\n    removeZeros++;\n  }\n  return removeZeros === res.length ? \"0\" : res.substring(removeZeros);\n}\n\n// Compute the value of the bit\nlet values = ['1'];\nfor(let i = 1; i < 64; i++){\n  values.push(stringAdd(values[i - 1], values[i - 1]));\n}\n\nfunction Square(props){\n\n  let color = 'white';\n  // get row number\n  let row = Math.floor(props.value / 8);\n  if(props.click[props.value]){\n    color = 'red';\n  }\n  else if((row % 2 === 0 && props.value % 2 === 1) || (row % 2 === 1 && props.value % 2 === 0)){\n    color = 'grey';\n  }\n  return (\n    <button \n      className = 'square' \n      onClick = {props.onClick}\n      style = {{backgroundColor: color}}>\n    </button>\n  )\n}\n\nfunction Label(props){\n  return (\n    <div\n      className ='square'\n      style = {{border: 0, zIndex: -1}}>\n        {props.value}\n    </div>\n  )\n}\n\nclass Display extends React.Component {\n\n  computeBinary(){\n    let res = \"\";\n    for(const i of this.props.click){\n      res += i ? \"1\" : \"0\";\n    }\n    return res;\n  }\n  \n  computeHex(){\n    let res = \"\";\n    for(let i = 0; i < 63; i += 4){\n      let sum = 0;\n      sum += (this.props.click[i] - '0') * 8;\n      sum += (this.props.click[i + 1] - '0') * 4;\n      sum += (this.props.click[i + 2] - '0') * 2;\n      sum += (this.props.click[i + 3] - '0');\n      res += sum.toString(16)\n    }\n    return res.toUpperCase();\n  }\n\n  computeSum(){\n    // Compute twos complement\n    let sum = \"0\";\n    let negative = this.props.click[63];\n    if(!negative){\n      for(let i = 0; i < 63; i++){\n        if(this.props.click[i]){\n          sum = stringAdd(sum, values[i]);\n        }\n      }\n    }\n    else{\n      for(let i = 0; i < 63; i++){\n        if(!this.props.click[i]){\n          sum = stringAdd(sum, values[i]);\n        }\n      }\n      sum = stringAdd(sum, \"1\");\n      sum = '-' + sum;\n    }\n    return sum;\n  }\n\n  render(){\n    let input;\n    if(this.props.name === \"Binary\"){\n      if(this.props.type === \"bin\"){\n        input = <input type=\"text\" style={{width:\"500px\"}} value={this.props.number} onChange={(e) => {this.props.change(e);}}/>\n      }\n      else{\n        input = <input type=\"text\" style={{width:\"500px\"}} value={this.computeBinary()} onChange={(e) => {this.props.change(e);}}/>\n      }\n    }\n    else if(this.props.name === \"Hexadecimal\"){\n      if(this.props.type === \"hex\"){\n        input = <input type=\"text\" style={{width:\"500px\"}} value={this.props.number} onChange={(e) => {this.props.change(e);}}/>\n      }\n      else{\n        input = <input type=\"text\" style={{width:\"500px\"}} value={this.computeHex()} onChange={(e) => {this.props.change(e);}}/>\n      }\n    }\n    else if(this.props.name === \"Decimal\"){\n      if(this.props.type === \"dec\"){\n        input = <input type=\"text\" style={{width:\"500px\"}} value={this.props.number} onChange={(e) => {this.props.change(e);}}/>\n      }\n      else{\n        input = <input type=\"text\" style={{width:\"500px\"}} value={this.computeSum()} onChange={(e) => {this.props.change(e);}}/>\n      }\n    }\n    return (\n      <div>\n        <div>{this.props.name}</div>{input}\n      </div>\n    )\n  }\n\n\n}\n\nclass Board extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      click: Array(64).fill(false),\n      type: \"\",\n      number: \"0\",\n    }\n  }\n\n  clear(){\n    this.setState({\n      click : Array(64).fill(false),\n      type : \"\",\n    });\n  }\n\n  isHex(e){\n    let c = e.toUpperCase();\n    if((c >= \"0\" && c <= \"9\") || (c >= \"A\" && c <= \"F\")){\n      return true;\n    }\n    return false;\n  }\n\n  convertHex(e){\n    let val = parseInt(e, 16);\n    let res = \"\";\n    if(val >= 8){\n      val -= 8;\n      res += \"1\";\n    }\n    else{\n      res += \"0\";\n    }\n    if(val >= 4){\n      val -= 4;\n      res += \"1\";\n    }\n    else{\n      res += \"0\";\n    }\n    if(val >= 2){\n      val -= 2;\n      res += \"1\";\n    }\n    else{\n      res += \"0\";\n    }\n    if(val >= 1){\n      val -= 1;\n      res += \"1\";\n    }\n    else{\n      res += \"0\";\n    }\n    return res;\n  }\n\n  handleChange(event){\n    let arr = Array(64).fill(false);\n    let val = event.target.value;\n    let negative = false;\n    if(val[0] === '-'){\n      negative = true;\n      arr[63] = true;\n      // Set up twos complement negative value\n      val = val.substring(1);\n      val = stringSubtract(val, \"1\");\n    }\n    for(let i = 62; i >= 0; i--){\n      // Only enter, if string is longer in length OR if equal in length and val is larger\n      if(val.length > values[i].length || ((val.length === values[i].length) && (val >= values[i]))){\n        val = stringSubtract(val, values[i]);\n        if(!negative){\n          arr[i] = true;\n        }\n      }\n      else if(negative){\n        arr[i] = true;\n      }\n    }\n    if(val !== \"0\"){\n      arr = Array(64).fill(false);\n    }\n    this.setState({\n      click : arr,\n      type : \"dec\",\n      number : event.target.value,\n    });\n  }\n\n  handleChangeBin(event){\n    let arr = Array(64).fill(false);\n    // validate\n    let val = event.target.value;\n    let validate = true;\n    if(val.length > 0 && val.length <= 64){\n      for(let i = 0; i < val.length; i++){\n        if(val[i] < \"0\" || val[i] > \"1\"){\n          validate = false;\n          break;\n        }\n      }\n    }\n    else{\n      validate = false;\n    }\n    if(validate){\n      let counter = 0;\n      for(let i = val.length - 1; i >= 0; i--){\n        if(val[i] === \"1\"){\n          arr[63 - counter] = true;\n        }\n        counter++;\n      }\n    }\n    this.setState({\n      click : arr,\n      type : \"bin\",\n      number : val,\n    });\n  }\n\n  handleChangeHex(event){\n    let arr = Array(64).fill(false);\n    // validate\n    let val = event.target.value;\n    let validate = true;\n    if(val.length > 0 && val.length <= 16){\n      for(let i = 0; i < val.length; i++){\n        if(!this.isHex(val[i])){\n          validate = false;\n          break;\n        }\n      }\n    }\n    else{\n      validate = false;\n    }\n    if(validate){\n      let counter = 0;\n      for(let i = val.length - 1; i >= 0; i--){\n        let bin = this.convertHex(val[i]);\n        for(let j = 0; j < bin.length; j++){\n          if(bin[j] === \"1\"){\n            arr[63 - counter - 3 + j] = true;\n          }\n        }\n        counter += 4;\n      }\n    }\n    this.setState({\n      click : arr,\n      type : \"hex\",\n      number : event.target.value,\n    });\n  }\n\n  renderLabel(i){\n    return <Label\n      key = {i}\n      value = {i}\n      />\n  }\n\n  renderSquare(i){\n    return <Square\n    key = {i}\n    value = {i}\n    click = {this.state.click}\n    onClick = {() => {\n      let newClick = this.state.click.slice();\n      newClick[i] = !newClick[i];\n      this.setState({\n        click : newClick,\n        type : \"\",\n      })\n    }}\n    />;\n  }\n\n  render() {\n\n    // Set up the board\n    let buffer = [];\n    for(let i = 0; i < 8; i++){\n      let component = [];\n      for(let j = 0; j < 8; j++){\n        component.push(this.renderSquare(8 * i + j));\n      }\n      component.push(this.renderLabel(8 - i));\n      buffer.push(<div className='board-row' key={i}>{component}</div>)\n    }\n    let alphaLabel = [];\n    for(let i = 0; i < 8; i++){\n      alphaLabel.push(this.renderLabel(String.fromCharCode(i + 'a'.charCodeAt(0))));\n    }\n    buffer.push(<div className='board-row' key={8}>{alphaLabel}</div>)\n\n    let res = \n    <div>\n      <div className = 'board'>{buffer}</div>\n      <Display name = \"Binary\" number = {this.state.number} click = {this.state.click} type = {this.state.type} change = {(e) => {this.handleChangeBin(e);}}/>\n      <Display name = \"Hexadecimal\" number = {this.state.number} click = {this.state.click} type = {this.state.type} change = {(e) => {this.handleChangeHex(e);}}/>\n      <Display name = \"Decimal\" number = {this.state.number} click = {this.state.click} type = {this.state.type} change = {(e) => {this.handleChange(e);}}/>\n      <div><button onClick = {() => this.clear()}>CLEAR</button></div>\n    </div>\n    return res;\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Board />,\n  document.getElementById('root')\n);"],"sourceRoot":""}