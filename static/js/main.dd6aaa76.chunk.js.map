{"version":3,"sources":["index.js"],"names":["stringAdd","a","b","i","length","j","carry","res","sum","stringSubtract","sub","removeZeros","substring","values","push","Square","props","color","row","Math","floor","value","click","className","onClick","style","backgroundColor","Label","border","zIndex","Board","state","Array","fill","number","this","setState","event","arr","val","target","negative","toString","toUpperCase","newClick","slice","computeSum","buffer","component","renderSquare","renderLabel","alphaLabel","String","fromCharCode","charCodeAt","computeBinary","computeHex","type","width","onChange","e","handleChange","clear","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sNAgBA,SAASA,EAAUC,EAAGC,GAKpB,IAJA,IAAIC,EAAIF,EAAEG,OAAS,EACfC,EAAIH,EAAEE,OAAS,EACfE,EAAQ,EACRC,EAAM,GACJJ,GAAK,GAAKE,GAAK,GAAKC,GAAM,CAC9B,IAAIE,EAAM,EACPL,GAAK,IACNK,GAAOP,EAAEE,GAAK,KAEbE,GAAK,IACNG,GAAON,EAAEG,GAAK,MAEhBG,GAAOF,IACG,IACRA,EAAQ,EACRE,GAAO,IAGPF,EAAQ,EAEVH,IACAE,IACAE,EAAMC,EAAMD,EAEd,OAAOA,EAGT,SAASE,EAAeR,EAAGC,GAKzB,IAJA,IAAIC,EAAIF,EAAEG,OAAS,EACfC,EAAIH,EAAEE,OAAS,EACfE,EAAQ,EACRC,EAAM,GACJJ,GAAK,GAAE,CACX,IAAIO,EAAMJ,GAASL,EAAEE,GAAK,KAC1BG,EAAQ,EACLD,GAAK,IACNK,GAAOR,EAAEG,GAAK,KAEbK,EAAM,IACPA,GAAO,GACPJ,GAAS,GAEXH,IACAE,IACAE,EAAMG,EAAMH,EAGd,IADA,IAAII,EAAc,EACS,MAArBJ,EAAII,IACRA,IAEF,OAAOA,IAAgBJ,EAAIH,OAAS,IAAMG,EAAIK,UAAUD,GAK1D,IADA,IAAIE,EAAS,CAAC,KACNV,EAAI,EAAGA,EAAI,GAAIA,IACrBU,EAAOC,KAAKd,EAAUa,EAAOV,EAAI,GAAIU,EAAOV,EAAI,KAGlD,SAASY,EAAOC,GAEd,IAAIC,EAAQ,QAERC,EAAMC,KAAKC,MAAMJ,EAAMK,MAAQ,GAOnC,OANGL,EAAMM,MAAMN,EAAMK,OACnBJ,EAAQ,OAEDC,EAAM,IAAM,GAAKF,EAAMK,MAAQ,IAAM,GAAOH,EAAM,IAAM,GAAKF,EAAMK,MAAQ,IAAM,KACxFJ,EAAQ,QAGR,wBACEM,UAAY,SACZC,QAAWR,EAAMQ,QACjBC,MAAS,CAACC,gBAAiBT,KAKjC,SAASU,EAAMX,GACb,OACE,qBACEO,UAAW,SACXE,MAAS,CAACG,OAAQ,EAAGC,QAAS,GAFhC,SAGKb,EAAMK,Q,IAKTS,E,kDAEJ,WAAYd,GAAO,IAAD,8BAChB,cAAMA,IACDe,MAAQ,CACXT,MAAOU,MAAM,IAAIC,MAAK,GACtBC,OAAQ,GAJM,E,yCAQlB,WACEC,KAAKC,SAAS,CACZd,MAAQU,MAAM,IAAIC,MAAK,GACvBC,OAAS,M,0BAIb,SAAaG,GACX,IAAIC,EAAMN,MAAM,IAAIC,MAAK,GACrBM,EAAMF,EAAMG,OAAOnB,MACnBoB,GAAW,EACD,MAAXF,EAAI,KACLE,GAAW,EACXH,EAAI,KAAM,EAGVC,EAAM9B,EADN8B,EAAMA,EAAI3B,UAAU,GACM,MAE5B,IAAI,IAAIT,EAAI,GAAIA,GAAK,EAAGA,IAEnBoC,EAAInC,OAASS,EAAOV,GAAGC,QAAYmC,EAAInC,SAAWS,EAAOV,GAAGC,QAAYmC,GAAO1B,EAAOV,IACvFoC,EAAM9B,EAAe8B,EAAK1B,EAAOV,IAC7BsC,IACFH,EAAInC,IAAK,IAGLsC,IACNH,EAAInC,IAAK,GAGF,MAARoC,IACDD,EAAMN,MAAM,IAAIC,MAAK,IAEvBE,KAAKC,SAAS,CACZd,MAAQgB,EACRJ,OAASG,EAAMG,OAAOnB,U,wBAI1B,SAAWiB,GAET,IAAI9B,EAAM,IAEV,GADe8B,EAAI,IAQf,CACF,IAAI,IAAInC,EAAI,EAAGA,EAAI,GAAIA,IACjBmC,EAAInC,KACNK,EAAMR,EAAUQ,EAAKK,EAAOV,KAIhCK,EAAM,KADNA,EAAMR,EAAUQ,EAAK,WAZrB,IAAI,IAAIL,EAAI,EAAGA,EAAI,GAAIA,IAClBmC,EAAInC,KACLK,EAAMR,EAAUQ,EAAKK,EAAOV,KAalC,OAAOK,I,2BAGT,WACE,IADa,EACTD,EAAM,GADG,cAEE4B,KAAKJ,MAAMT,OAFb,IAEb,IAAI,EAAJ,qBAAgC,CAC9Bf,GAD8B,QACnB,IAAM,KAHN,8BAKb,OAAOA,I,wBAGT,WAEE,IADA,IAAIA,EAAM,GACFJ,EAAI,EAAGA,EAAI,GAAIA,GAAK,EAAE,CAC5B,IAAIK,EAAM,EACVA,GAAQ2B,KAAKJ,MAAMT,MAAMnB,GAAK,IAC9BK,GAAyC,GAAjC2B,KAAKJ,MAAMT,MAAMnB,EAAI,GAAK,KAClCK,GAAyC,GAAjC2B,KAAKJ,MAAMT,MAAMnB,EAAI,GAAK,KAElCI,IADAC,GAAyC,GAAjC2B,KAAKJ,MAAMT,MAAMnB,EAAI,GAAK,MACvBuC,SAAS,IAEtB,OAAOnC,EAAIoC,gB,yBAGb,SAAYxC,GACV,OAAO,cAACwB,EAAD,CAELN,MAASlB,GADFA,K,0BAKX,SAAaA,GAAG,IAAD,OACb,OAAO,cAACY,EAAD,CAEPM,MAASlB,EACTmB,MAASa,KAAKJ,MAAMT,MACpBE,QAAW,WACT,IAAIoB,EAAW,EAAKb,MAAMT,MAAMuB,QAChCD,EAASzC,IAAMyC,EAASzC,GACxB,IAAIK,EAAM,EAAKsC,WAAWF,GAC1B,EAAKR,SAAS,CACZd,MAAQsB,EACRV,OAAS1B,MATNL,K,oBAeT,WAIE,IAJQ,IAAD,OAGH4C,EAAS,GACL5C,EAAI,EAAGA,EAAI,EAAGA,IAAI,CAExB,IADA,IAAI6C,EAAY,GACR3C,EAAI,EAAGA,EAAI,EAAGA,IACpB2C,EAAUlC,KAAKqB,KAAKc,aAAa,EAAI9C,EAAIE,IAE3C2C,EAAUlC,KAAKqB,KAAKe,YAAY,EAAI/C,IACpC4C,EAAOjC,KAAK,qBAAKS,UAAU,YAAf,SAAoCyB,GAAJ7C,IAG9C,IADA,IAAIgD,EAAa,GACThD,EAAI,EAAGA,EAAI,EAAGA,IACpBgD,EAAWrC,KAAKqB,KAAKe,YAAYE,OAAOC,aAAalD,EAAI,IAAImD,WAAW,MAc1E,OAZAP,EAAOjC,KAAK,qBAAKS,UAAU,YAAf,SAAoC4B,GAAJ,IAElC,gCACR,qBAAK5B,UAAY,QAAjB,SAA0BwB,IAC1B,yCACA,8BAAMZ,KAAKoB,kBACX,8CACA,8BAAMpB,KAAKqB,eACX,0CACA,uBAAOC,KAAK,SAAShC,MAAO,CAACiC,MAAM,SAAUrC,MAAOc,KAAKJ,MAAMG,OAAQyB,SAAU,SAACC,GAAO,EAAKC,aAAaD,MAC3G,8BAAK,wBAAQpC,QAAW,kBAAM,EAAKsC,SAA9B,4B,GA/ISC,IAAMC,WAuJ1BC,IAASC,OACP,cAACpC,EAAD,IACAqC,SAASC,eAAe,W","file":"static/js/main.dd6aaa76.chunk.js","sourcesContent":["/* Creates an interactive webpage where clicking on chess bitboard\n * generates the twos complement equivalent for the bitboard\n * https://github.com/SFU-Open-Source-Development/chess-engine\n * Useful to quickly generate bitmasks visually\n *\n * Author: Allan Chang\n *\n * Original code: \n * Source: https://reactjs.org/tutorial/tutorial.html\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\nfunction stringAdd(a, b){\n  let i = a.length - 1;\n  let j = b.length - 1;\n  let carry = 0;\n  let res = \"\";\n  while(i >= 0 || j >= 0 || carry){\n    let sum = 0;\n    if(i >= 0){\n      sum += a[i] - '0';\n    }\n    if(j >= 0){\n      sum += b[j] - '0';\n    }\n    sum += carry;\n    if(sum >= 10){\n      carry = 1;\n      sum -= 10;\n    }\n    else{\n      carry = 0;\n    }\n    i--;\n    j--;\n    res = sum + res;\n  }\n  return res;\n}\n\nfunction stringSubtract(a, b){\n  let i = a.length - 1;\n  let j = b.length - 1;\n  let carry = 0;\n  let res = \"\";\n  while(i >= 0){\n    let sub = carry + (a[i] - '0');\n    carry = 0;\n    if(j >= 0){\n      sub -= b[j] - '0';\n    }\n    if(sub < 0){\n      sub += 10;\n      carry = -1;\n    }\n    i--;\n    j--;\n    res = sub + res;\n  }\n  let removeZeros = 0;\n  while(res[removeZeros] === \"0\"){\n    removeZeros++;\n  }\n  return removeZeros === res.length ? \"0\" : res.substring(removeZeros);\n}\n\n// Compute the value of the bit\nlet values = ['1'];\nfor(let i = 1; i < 64; i++){\n  values.push(stringAdd(values[i - 1], values[i - 1]));\n}\n\nfunction Square(props){\n\n  let color = 'white';\n  // get row number\n  let row = Math.floor(props.value / 8);\n  if(props.click[props.value]){\n    color = 'red';\n  }\n  else if((row % 2 === 0 && props.value % 2 === 1) || (row % 2 === 1 && props.value % 2 === 0)){\n    color = 'grey';\n  }\n  return (\n    <button \n      className = 'square' \n      onClick = {props.onClick}\n      style = {{backgroundColor: color}}>\n    </button>\n  )\n}\n\nfunction Label(props){\n  return (\n    <div\n      className ='square'\n      style = {{border: 0, zIndex: -1}}>\n        {props.value}\n    </div>\n  )\n}\n\nclass Board extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      click: Array(64).fill(false),\n      number: 0,\n    }\n  }\n\n  clear(){\n    this.setState({\n      click : Array(64).fill(false),\n      number : 0,\n    });\n  }\n\n  handleChange(event){\n    let arr = Array(64).fill(false);\n    let val = event.target.value;\n    let negative = false;\n    if(val[0] === '-'){\n      negative = true;\n      arr[63] = true;\n      // Set up twos complement negative value\n      val = val.substring(1);\n      val = stringSubtract(val, \"1\");\n    }\n    for(let i = 62; i >= 0; i--){\n      // Only enter, if string is longer in length OR if equal in length and val is larger\n      if(val.length > values[i].length || ((val.length === values[i].length) && (val >= values[i]))){\n        val = stringSubtract(val, values[i]);\n        if(!negative){\n          arr[i] = true;\n        }\n      }\n      else if(negative){\n        arr[i] = true;\n      }\n    }\n    if(val !== \"0\"){\n      arr = Array(64).fill(false);\n    }\n    this.setState({\n      click : arr,\n      number : event.target.value,\n    });\n  }\n\n  computeSum(arr){\n    // Compute twos complement\n    let sum = \"0\";\n    let negative = arr[63];\n    if(!negative){\n      for(let i = 0; i < 63; i++){\n        if(arr[i]){\n          sum = stringAdd(sum, values[i]);\n        }\n      }\n    }\n    else{\n      for(let i = 0; i < 63; i++){\n        if(!arr[i]){\n          sum = stringAdd(sum, values[i]);\n        }\n      }\n      sum = stringAdd(sum, \"1\");\n      sum = '-' + sum;\n    }\n    return sum;\n  }\n\n  computeBinary(){\n    let res = \"\";\n    for(const i of this.state.click){\n      res += i ? \"1\" : \"0\";\n    }\n    return res;\n  }\n\n  computeHex(){\n    let res = \"\";\n    for(let i = 0; i < 63; i += 4){\n      let sum = 0;\n      sum += (this.state.click[i] - '0');\n      sum += (this.state.click[i + 1] - '0') * 2;\n      sum += (this.state.click[i + 2] - '0') * 4;\n      sum += (this.state.click[i + 3] - '0') * 8;\n      res += sum.toString(16)\n    }\n    return res.toUpperCase();\n  }\n\n  renderLabel(i){\n    return <Label\n      key = {i}\n      value = {i}\n      />\n  }\n\n  renderSquare(i){\n    return <Square\n    key = {i}\n    value = {i}\n    click = {this.state.click}\n    onClick = {() => {\n      let newClick = this.state.click.slice();\n      newClick[i] = !newClick[i];\n      let sum = this.computeSum(newClick);\n      this.setState({\n        click : newClick,\n        number : sum,\n      })\n    }}\n    />;\n  }\n\n  render() {\n\n    // Set up the board\n    let buffer = [];\n    for(let i = 0; i < 8; i++){\n      let component = [];\n      for(let j = 0; j < 8; j++){\n        component.push(this.renderSquare(8 * i + j));\n      }\n      component.push(this.renderLabel(8 - i));\n      buffer.push(<div className='board-row' key={i}>{component}</div>)\n    }\n    let alphaLabel = [];\n    for(let i = 0; i < 8; i++){\n      alphaLabel.push(this.renderLabel(String.fromCharCode(i + 'a'.charCodeAt(0))));\n    }\n    buffer.push(<div className='board-row' key={8}>{alphaLabel}</div>)\n\n    let res = <div>\n      <div className = 'board'>{buffer}</div>\n      <div>Binary</div>\n      <div>{this.computeBinary()}</div>\n      <div>Hexadecimal</div>\n      <div>{this.computeHex()}</div>\n      <div>Decimal</div>\n      <input type=\"number\" style={{width:\"500px\"}} value={this.state.number} onChange={(e) => {this.handleChange(e);}}/>\n      <div><button onClick = {() => this.clear()}>CLEAR</button></div>\n    </div>\n    return res;\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Board />,\n  document.getElementById('root')\n);"],"sourceRoot":""}